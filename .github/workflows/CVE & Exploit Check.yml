name: CVE & Exploit Check (nuclei + nmap-basic)

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Target domain or host (example.com)'
        required: true
        default: 'example.com'

jobs:
  cve-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 240

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Require webhook
        run: |
          if [ -z "${{ secrets.DISCORD_WEBHOOK }}" ]; then
            echo "::error::DISCORD_WEBHOOK required"
            exit 1
          fi
          echo "DISCORD_WEBHOOK=${{ secrets.DISCORD_WEBHOOK }}" >> $GITHUB_ENV

      - name: Install tools (nuclei, nmap)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl nmap || true
          echo "$HOME/go/bin" >> $GITHUB_PATH
          /usr/bin/env bash -lc "go install github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest" || true

      - name: Set target
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.domain }}" ]; then
            echo "TARGET=${{ github.event.inputs.domain }}" >> $GITHUB_ENV
          else
            echo "TARGET=example.com" >> $GITHUB_ENV
          fi

      - name: Resolve hosts & collect live URLs
        run: |
          mkdir -p cve-output
          # get A records via dig (simple)
          HOST=$(echo "${TARGET}" | sed 's|https\?://||' | sed 's|/.*||')
          echo "${HOST}" > cve-output/targets.txt
          # try to probe HTTP root
          curl -s -I "https://${HOST}" -m 10 -o /dev/null && echo "https://${HOST}" >> cve-output/live_urls.txt || true
          curl -s -I "http://${HOST}" -m 10 -o /dev/null && echo "http://${HOST}" >> cve-output/live_urls.txt || true
          sort -u cve-output/live_urls.txt -o cve-output/live_urls.txt || true

      - name: Nuclei CVE templates (critical/high)
        run: |
          if command -v nuclei >/dev/null 2>&1; then
            nuclei -update-templates || true
            if [ -s cve-output/live_urls.txt ]; then
              nuclei -l cve-output/live_urls.txt -tags cve,exploit -severity critical,high -silent -o cve-output/nuclei_cve.txt || true
            else
              nuclei -l <(echo "${HOST}") -tags cve,exploit -severity critical,high -silent -o cve-output/nuclei_cve.txt || true
            fi
          else
            touch cve-output/nuclei_cve.txt
          fi

      - name: Nmap service & vuln scripts (basic)
        run: |
          # Run a quick nmap service detection and common vuln scripts on discovered host (non-exhaustive)
          mkdir -p cve-output/nmap
          if command -v nmap >/dev/null 2>&1; then
            nmap -Pn -sV --script vuln -oN cve-output/nmap/nmap_vuln.txt "${HOST}" || true
          else
            echo "nmap not installed" > cve-output/nmap/nmap_vuln.txt
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cve-scan-${{ github.run_id }}
          path: cve-output

      - name: Notify
        run: |
          NUC_COUNT=$(wc -l < cve-output/nuclei_cve.txt 2>/dev/null || echo 0)
          NMAP_FOUND=$(grep -i 'VULNERABLE\|Script' cve-output/nmap/nmap_vuln.txt 2>/dev/null | wc -l || echo 0)
          SUMMARY="âœ… CVE scan finished for ${TARGET}\nNuclei CVE hits: ${NUC_COUNT}\nNmap script matches: ${NMAP_FOUND}\n(See artifacts)"
          curl -s -X POST -H "Content-Type: application/json" -d "{\"content\": $(echo \"$SUMMARY\" | jq -Rs .)}" "${DISCORD_WEBHOOK}" || true
