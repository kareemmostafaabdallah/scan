name: Odd Endpoints Detector & Discord Alert

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target domain or base URL (e.g. https://example.com)'
        required: true
        default: 'https://example.com'

jobs:
  detect:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt update -y
          sudo apt install -y jq curl httpx ffuf

      - name: Prepare environment
        run: |
          set -euo pipefail
          mkdir -p odd-endpoints-output
          echo "TARGET_URL=${{ github.event.inputs.target }}" >> $GITHUB_ENV

      - name: Fuzz paths using ffuf
        run: |
          set -euo pipefail
          WORDLIST=/usr/share/wordlists/dirb/common.txt
          OUTPUT=odd-endpoints-output/paths.txt

          ffuf -u "${TARGET_URL}/FUZZ" -w "$WORDLIST" -t 50 -of csv -o ffuf_results.csv || true
          cut -d',' -f1 ffuf_results.csv | grep -E -v '^url$' | sort -u > "$OUTPUT"
          echo "[+] Found $(wc -l < "$OUTPUT") paths"

      - name: Analyze paths
        run: |
          set -euo pipefail
          INPUT=odd-endpoints-output/paths.txt
          OUTPUT_JSON=odd-endpoints-output/results.json
          : > "$OUTPUT_JSON"

          while read -r path; do
            [ -z "$path" ] && continue
            URL="${TARGET_URL}/${path}"

            STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "$URL" || echo "000")
            LENGTH=$(curl -s -L "$URL" | wc -c || echo "0")
            SERVER_HDR=$(curl -s -I "$URL" | grep -i '^Server:' | tr '\n' ' ' | sed 's/"/\\"/g' || echo "")
            REASONS=()

            if [[ "$STATUS" =~ ^(401|403|500|502|503|302)$ ]]; then
              REASONS+=("status_$STATUS")
            fi

            if echo "$path" | grep -Ei 'admin|debug|config|backup|upload|portal' >/dev/null; then
              REASONS+=("keyword_match")
            fi

            if echo "$path" | grep -Ei '\.env|\.git|backup|\.zip|\.sql|\.bak' >/dev/null; then
              REASONS+=("sensitive_file")
            fi

            if [ "${#REASONS[@]}" -gt 0 ]; then
              jq -n \
                --arg url "$URL" \
                --arg status "$STATUS" \
                --arg length "$LENGTH" \
                --arg server "$SERVER_HDR" \
                --arg reasons "$(IFS=','; echo "${REASONS[*]}")" \
                '{url:$url, status:$status, length:$length, server:$server, reasons:($reasons | split(","))}' >> "$OUTPUT_JSON"
            fi
          done < "$INPUT"

          echo "[+] Saved suspicious endpoints to $OUTPUT_JSON"

      - name: Send to Discord
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          set -euo pipefail
          FILE=odd-endpoints-output/results.json
          if [ ! -s "$FILE" ]; then
            echo "No suspicious endpoints found."
            exit 0
          fi

          jq -c '.' "$FILE" | while read -r line; do
            URL=$(echo "$line" | jq -r '.url')
            STATUS=$(echo "$line" | jq -r '.status')
            REASONS=$(echo "$line" | jq -r '.reasons | join(", ")')
            MSG="🕵️ Odd endpoint found:\nURL: $URL\nStatus: $STATUS\nReasons: $REASONS"
            curl -H "Content-Type: application/json" \
                 -d "{\"content\": \"$MSG\"}" \
                 "$DISCORD_WEBHOOK"
          done
