#!/usr/bin/env bash
set -euo pipefail

# ensure directories
mkdir -p path-discovery-output/ffuf/results

# defaults
THREADS="${FFUF_THREADS:-40}"
FFUF_TIMEOUT="${FFUF_TIMEOUT:-10}"
FOLLOW_FLAG=""
if [ "${FFUF_FOLLOW:-false}" = "true" ] || [ "${FFUF_FOLLOW:-false}" = "True" ]; then
  FOLLOW_FLAG="-r"
fi

STATUS_FILTER=""
if [ -n "${STATUS_CODES:-}" ]; then
  # remove spaces and keep comma-separated list
  CLEAN_CODES=$(echo "${STATUS_CODES}" | tr -d ' ')
  STATUS_FILTER="-mc ${CLEAN_CODES}"
fi

# prepare extension flags for ffuf (-e ext1 -e ext2)
EXT_FLAG=""
if [ -n "${EXTENSIONS:-}" ]; then
  EXT_CLEAN=$(echo "${EXTENSIONS}" | tr -d ' ')
  IFS=',' read -r -a EXTS_ARR <<< "$EXT_CLEAN"
  for e in "${EXTS_ARR[@]}"; do
    e_trim=$(echo "$e" | sed -E 's/^[[:space:]]+|[[:space:]]+$//g')
    if [ -n "$e_trim" ]; then
      EXT_FLAG="${EXT_FLAG} -e ${e_trim}"
    fi
  done
fi

TARGETS_FILE="path-discovery-output/ffuf/targets.txt"
if [ ! -s "$TARGETS_FILE" ]; then
  echo "Warning: targets file not found or empty: $TARGETS_FILE" >&2
  echo "Nothing to fuzz. Exiting step successfully."
  exit 0
fi

while IFS= read -r base || [ -n "$base" ]; do
  # sanitize base and create filename-safe name
  # replace scheme and any characters not safe for filenames
  name=$(echo "$base" | sed -E 's#^https?://##I' | sed -E 's#[/:]+#_#g')
  out="path-discovery-output/ffuf/results/ffuf_${name}.json"
  echo "Running ffuf against $base -> $out (threads=${THREADS}, timeout=${FFUF_TIMEOUT})"

  # Run ffuf; continue on error for this target
  ffuf -u "${base}/FUZZ" -w wordlists/wordlist.txt -t "${THREADS}" -timeout "${FFUF_TIMEOUT}" -of json ${FOLLOW_FLAG} ${EXT_FLAG} ${STATUS_FILTER} -fw 0 -o "$out" || {
    echo "ffuf returned non-zero for $base (continuing to next target)" >&2
    continue
  }

  # quick processing if ffuf produced output
  if [ -s "$out" ]; then
    if command -v jq >/dev/null 2>&1; then
      jq -r '.results[]?.url' "$out" 2>/dev/null | sort -u > "path-discovery-output/ffuf/results/urls_${name}.txt" || true
    fi
  fi
done < "$TARGETS_FILE"
